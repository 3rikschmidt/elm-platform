
clone_folder: c:\projects\elm-platform

environment:
  matrix:
  - nodejs_version: "5.0"
    ELM_VERSION: "0.15.1"
  - nodejs_version: "0.10"
    ELM_VERSION: "0.15.1"

platform:
  - x86
  - x64

matrix:
  fast_finish: true

install:
  - node --version
  - npm --version
  - cd c:\projects\elm-platform
  - ps: >-
      If ($env:Platform -Match "x86") {
        $env:STACK_INSTALLER="x86_64"
      } Else {
        $env:STACK_INSTALLER="i386"
      }
  - curl -s -ostack.zip -L --insecure http://www.stackage.org/stack/windows-%STACK_INSTALLER%
  - 7z x stack.zip stack.exe
  - stack update
  - stack setup > nul
  # The ugly echo "" hack is to avoid complaints about 0 being an invalid file
  # descriptor - see https://github.com/commercialhaskell/stack/blob/e1605b888953124737ecff1dae3c790fd2a537c6/appveyor.yml
  - echo "" | stack install cabal-install
  - set PATH=%PATH%;C:\Users\appveyor\AppData\Local\Programs\stack\i386-windows\ghc-7.10.2\bin
  - set PATH=%PATH%;C:\Users\appveyor\AppData\Roaming\local\bin
  - cabal update
  - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:Platform
  - node --version
  - npm --version
  - cd installers
  - set GHC_PACKAGE_PATH=
  - ..\stack runghc BuildFromSource.hs %ELM_VERSION%

test_script:
  - cd Elm-Platform\*
  - mkdir dist_binaries
  - cp .cabal-sandbox/bin/elm* dist_binaries
  - tar cvzf binaries.tar.gz dist_binaries
  - ps: curl -T binaries.tar.gz -uelmappveyor:$env:BINTRAY_API_KEY https://api.bintray.com/content/elmlang/elm-platform/npm/$env:ELM_VERSION/$env:ELM_VERSION/win32-$env:Platform.tar.gz

build: off
